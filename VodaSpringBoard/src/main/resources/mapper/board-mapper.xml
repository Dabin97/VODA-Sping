<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.voda.mapper.BoardMapper">
	<resultMap type="board" id="board">
		<id column="bno" property="bno"/>
		<result column="title" property="title"/>
		<result column="pd" property="pd"/>
		<result column="casting" property="casting"/>
		<result column="content" property="content"/>
		<result column="new_date" property="newDate"/>
		<result column="expire_date" property="expireDate"/>
		<result column="genre" property="genre"/>
		<result column="poster_video" property="posterVideo"/>
		<result column="ott_no" property="ottNo"/>
		<result column="ott_name" property="ottName"/>
		<result column="path" property="path"/>
		<result column="heart" property="heart"/>
	</resultMap>


	<select id="selectBoardList" resultType="board" parameterType="hashMap">
    SELECT  B.bno
		   ,B.title
		   ,B.pd
		   ,B.casting
		   ,B.content
		   ,B.genre
		   ,B.poster_video 												AS posterVideo
		   ,TO_CHAR(B.new_date, 'YYYY-MM-DD') 							AS newDate
		   ,TO_CHAR(B.expire_date, 'YYYY-MM-DD')						AS expireDate
		   ,B.ott_no 													AS ottNo
		   ,(SELECT ott_name FROM ott_table WHERE ott_no = B.ott_no)	AS ottName
      FROM  board_table B
     WHERE  1=1
       AND  CEIL(rw / #{contentCount}) = #{pageNo}
	</select>

	<select id="selectNewList" resultType="board" parameterType="hashMap">
	SELECT  *
      FROM  (
            SELECT  B.bno
				   ,B.title
				   ,B.pd
				   ,B.casting
				   ,B.content
				   ,B.genre
				   ,B.poster_video 												AS posterVideo
				   ,TO_CHAR(B.new_date, 'YYYY-MM-DD') 							AS newDate
				   ,TO_CHAR(B.expire_date, 'YYYY-MM-DD')						AS expireDate
				   ,B.ott_no 													AS ottNo
				   ,(SELECT ott_name FROM ott_table WHERE ott_no = B.ott_no)	AS ottName
					--날짜 최신순으로 뽑도록 구역을 잡음
				   ,ROW_NUMBER() OVER(ORDER BY B.new_date DESC)                 AS rnum
		      FROM  board_table B
            ) A
     WHERE  1=1
       AND  CEIL(A.RNUM / #{contentCount}) = #{pageNo}
	</select>

	<select id="selectExpireList" resultType="board" parameterType="hashMap">
	SELECT  *
      FROM  (
            SELECT  B.bno
				   ,B.title
				   ,B.pd
				   ,B.casting
				   ,B.content
				   ,B.genre
				   ,B.poster_video 												AS posterVideo
				   ,TO_CHAR(B.new_date, 'YYYY-MM-DD') 							AS newDate
				   ,TO_CHAR(B.expire_date, 'YYYY-MM-DD')						AS expireDate
				   ,B.ott_no 													AS ottNo
				   ,(SELECT ott_name FROM ott_table WHERE ott_no = B.ott_no)	AS ottName
				   --날짜 최신순으로 뽑도록 구역을 잡음
				   ,ROW_NUMBER() OVER(ORDER BY B.new_date DESC)                 AS rnum
		      FROM  board_table B
            ) A
     WHERE  1=1
       AND  CEIL(A.RNUM / #{contentCount}) = #{pageNo}
	</select>

	<select id="selectBoard" resultType="board" parameterType="int">
	SELECT  B.bno
		   ,B.title
		   ,B.pd
		   ,B.casting
		   ,B.content
		   ,B.genre
		   ,B.poster_video 												AS posterVideo
		   ,TO_CHAR(B.new_date, 'YYYY-MM-DD') 							AS newDate
		   ,TO_CHAR(B.expire_date, 'YYYY-MM-DD')						AS expireDate
		   ,B.ott_no 													AS ottNo
		   ,(SELECT ott_name FROM ott_table WHERE ott_no = B.ott_no)	AS ottName
	  FROM  board_table B
	 WHERE  1=1
	   AND  B.bno = #{bno}
	</select>

	<select id="selectMainContentList" resultMap="board">
	SELECT  *
	  FROM  board_table
	</select>

	<select id="selectNewContentList" resultMap="board">
	<![CDATA[
	-- 최근 등록된 콘텐츠 중 상위 5개
	SELECT  *
	  FROM  (
	        SELECT  B.bno
				   ,B.title
				   ,B.pd
				   ,B.casting
				   ,B.content
				   ,B.genre
				   ,B.poster_video 												AS posterVideo
				   ,TO_CHAR(B.new_date, 'YYYY-MM-DD') 							AS newDate
				   ,TO_CHAR(B.expire_date, 'YYYY-MM-DD')						AS expireDate
				   ,B.ott_no 													AS ottNo
				   ,(SELECT ott_name FROM ott_table WHERE ott_no = B.ott_no)	AS ottName
				   --날짜 최신순으로 뽑도록 구역을 잡음
				   ,ROW_NUMBER() OVER(ORDER BY B.new_date DESC)                 AS rnum
			  FROM  board_table B
	        ) A
     WHERE  1=1
       AND  A.rnum <= 5
    ]]>
	</select>

	<select id="selectExpireContentList" resultMap="board">
	<![CDATA[
	-- 만료일자가 현재 이후 빠른 순으로 상위 5개
	SELECT  *
	  FROM  (
	        SELECT  B.bno
				   ,B.title
				   ,B.pd
				   ,B.casting
				   ,B.content
				   ,B.genre
				   ,B.poster_video 												AS posterVideo
				   ,TO_CHAR(B.new_date, 'YYYY-MM-DD') 							AS newDate
				   ,TO_CHAR(B.expire_date, 'YYYY-MM-DD')						AS expireDate
				   ,B.ott_no 													AS ottNo
				   ,(SELECT ott_name FROM ott_table WHERE ott_no = B.ott_no)	AS ottName
				   --날짜 최신순으로 뽑도록 구역을 잡음
				   ,ROW_NUMBER() OVER(ORDER BY B.expire_date)                   AS rnum
			  FROM  board_table B
	        ) A
     WHERE  1=1
       AND  A.rnum <= 5
    ]]>
	</select>

	<select id="selectHeartList" resultMap="board">
	SELECT * FROM heart_table WHERE id = #{id}
	</select>

	<select id="selectFileList" resultType="file" parameterType="int">
	SELECT  *
	  FROM  board_file
	 WHERE  1=1
	   AND  bno = #{bno}
	 ORDER BY fno
	</select>

	<select id="selectBoardCount" resultType="int">
	SELECT COUNT(*) FROM board_table
	</select>

	<insert id="insertBoardImage" parameterType="hashmap">
	INSERT INTO board_image VALUES (#{fno}, #{path})
	</insert>


	<select id="selectImageFile" parameterType="int" resultType="file">
    SELECT * FROM board_file WHERE bno = #{bno}
	</select>

	<select id="selectMainImageFile" parameterType="int" resultType="file">
	SELECT * FROM board_image
	</select>

	<select id="selectFile" parameterType="hashMap" resultType="file">
	SELECT * FROM board_file WHERE bno = #{bno} AND fno = #{fno}
	</select>

	 <select id="selectBoardBno" resultType="int">
	 SELECT board_bno_seq.NEXTVAL FROM DUAL
    </select>

	<insert id="insertBoard" parameterType="board">
	INSERT INTO board_table
    (bno, title, pd, casting, content, genre, poster_video,ott_no, new_date, expire_date)
    VALUES
    (#{bno}, #{title}, #{pd}, #{casting}, #{content}, #{genre}, #{posterVideo}, #{ottNo} , #{newDate}, #{expireDate})
	</insert>


	<insert id="insertFile" parameterType="file"> <!-- fno를 (SELECT max(fno) FROM board_file WHERE bno = #{bno})+1 서브쿼리로 변경, 제일 큰번호뒤에 새로운 파일이 붙도록 함 / 만약 기존파일이 아무것도 없으면 0이 나오도록 nvl을 넣어준다. -->
	INSERT INTO board_file
	VALUES (#{bno},(SELECT nvl(max(fno),0) FROM board_file WHERE bno = #{bno})+1,#{path})
	</insert>


	<update id="updateBoard" parameterType="board">
	UPDATE board_table
	   SET title=#{title}, pd=#{pd}, casting=#{casting}, content=#{content}, new_date=#{newDate},expire_date=#{expireDate},
	     genre =#{genre},poster_video=#{posterVideo},ott_no=#{ottNo}
	 WHERE 1=1
	   AND bno = #{bno}
	</update>


	<select id="deleteFileList" parameterType="hashMap" resultType="string">  <!-- sql문 안에 foreach문 구분자 콤마 -->
	SELECT  path
	  FROM  board_file
	 WHERE  1=1
	   AND  bno = #{bno}
	   AND  fno IN
		<foreach collection="fno" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>

	<delete id="deleteFile" parameterType="hashMap">
	DELETE FROM board_file
	      WHERE 1=1
	        AND bno = #{bno}
		<if test="fno != null">
			AND fno IN
			<foreach collection="fno" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
	</delete>

	<delete id="deleteBoard" parameterType="int">
	DELETE FROM board_table WHERE bno = #{bno}
	</delete>

	<select id="selectSearchContent" parameterType="hashmap" resultMap="board">
	SELECT B.bno,
	       B.title,
	       B.pd,
	       B.casting,
	       B.content,
	       B.genre,
	       B.poster_video,
	       TO_CHAR(B.new_date,'YYYY-MM-DD') AS new_date,
	       TO_CHAR(B.expire_date,'YYYY-MM-DD') AS expire_date,
	       B.ott_no,
	       OT.ott_name
	 FROM  board_table B
	      ,ott_table OT
	WHERE  1=1
	  AND  OT.ott_no = B.ott_no
	  AND (
	    <choose>
	      <when test="kind.equals('all')">
	        B.title LIKE '%' || #{search} || '%'
	        OR OT.ott_name LIKE '%' || #{search} || '%'
	      </when>
	      <when test="kind.equals('title')">
	        B.title LIKE '%' || #{search} || '%'
	      </when>
	      <when test="kind.equals('ott_name')">
	        OT.ott_name LIKE '%' || #{search} || '%'
	      </when>
	    </choose>
	  )
	</select>

	<select id="selectMemberSearchContent" parameterType="hashmap" resultMap="board">
	SELECT b.bno,
       b.title,
       b.pd,
       b.casting,
       b.content,
       b.genre,
       b.poster_video,
       b.ott_no,
       ot.ott_name
        FROM board_table b, ott_table ot
		WHERE ot.ott_no = b.ott_no
        AND(
        <choose>
        <when test="select_box == 'all'">
        b.title LIKE '%' || #{search} || '%' OR b.pd LIKE '%' || #{search} || '%' OR b.casting LIKE '%' || #{search} || '%'
        </when>
        <when test="select_box == 'title'">
		b.title LIKE '%' || #{search} || '%'
		</when>
        <when test="select_box == 'pd'">
		b.pd LIKE '%' || #{search} || '%'
		</when>
        <when test="select_box == 'casting'">
		b.casting LIKE '%' || #{search} || '%'
		</when>
		</choose>
		)
	</select>

	<select id="selectBoardHeart" parameterType="int" resultType="int">
	SELECT  count(*)
	  FROM  heart_table
	 WHERE  1=1
	   AND  bno = #{bno}
	</select>

	<select id="selectBoardHeartCHK" parameterType="hashMap" resultType="int">
	SELECT  count(*)
	  FROM  heart_table
	 WHERE  1=1
	   AND  bno = #{bno}
	   AND  id = #{id}
	</select>

	<insert id="insertBoardHeart" parameterType="hashMap">
	INSERT INTO heart_table VALUES (#{bno}, #{id})
	</insert>

	<delete id="deleteBoardHeart" parameterType="hashMap">
	DELETE FROM heart_table WHERE bno = #{bno} AND id = #{id}
	</delete>


</mapper>